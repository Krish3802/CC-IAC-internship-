# -*- coding: utf-8 -*-
"""Krish_IAC(10-18).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-bt_-tPJDoyRUF8xE59qMOaFCO3UIiJU

**11)How does the expected salary vary based on factors like ‘GPA’, ‘Family income’, ‘experience with python(monthly)?**
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the Excel file
path = '/Dataanalystdata.xlsx'
data = pd.read_excel(path)

data['Family Income'] = data['Family Income'].str.replace('[^\d.]', '', regex=True).astype(float)

plt.figure(figsize=(15, 5))

plt.subplot(1, 3, 1)
sns.scatterplot(x='CGPA', y='Expected salary (Lac)', data=data)
plt.title('Expected Salary vs CGPA')

plt.subplot(1, 3, 2)
sns.scatterplot(x='Family Income', y='Expected salary (Lac)', data=data)
plt.title('Expected Salary vs Family Income')

plt.subplot(1, 3, 3)
sns.scatterplot(x='Experience with python (Months)', y='Expected salary (Lac)', data=data)
plt.title('Expected Salary vs Experience with Python')

plt.tight_layout()
plt.show()

print("Correlation of expected salary with :")
# Calculate the correlation between GPA and Expected Salary
correlation = data['CGPA'].corr(data['Expected salary (Lac)'])
print(f'CGPA :{correlation}')
correlation = data['Family Income'].corr(data['Expected salary (Lac)'])
print(f'family income :{correlation}')
correlation = data['Experience with python (Months)'].corr(data['Expected salary (Lac)'])
print(f'experience with python (months) : {correlation}')

"""**12)Which event tend to attract more students from specific fields of study?**"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


path = "/content/Dataanalystdata.xlsx"
data = pd.read_excel(path)

grouped_data = data.groupby(['Events', 'Designation']).size().unstack(fill_value=0)
grouped_data['Total Students'] = grouped_data.sum(axis=1)
sorted_data = grouped_data.sort_values(by='Total Students', ascending=False)

plt.figure(figsize=(15, 8))
sns.set_palette("pastel")
ax = sorted_data['Total Students'].plot(kind='bar', width=0.8)

plt.title("Attendance of students by event")
plt.xlabel("Events")
plt.ylabel("Number of Students")
plt.xticks(rotation=55, ha='right')
ax.set_xlabel('')

for container in ax.containers:
    ax.bar_label(container, label_type='edge', fontsize=10, color='black', padding=3)

plt.legend(loc='upper right')
plt.tight_layout()
plt.show()

"""**13)Do students in leadership positions during their college years tends to have higher GPAs or better expected salary?**"""

import pandas as pd
import matplotlib.pyplot as plt


path = "/content/Dataanalystdata.xlsx"
data = pd.read_excel(path)


unique_values = data['Leadership- skills'].unique()
print(unique_values)

data['Leadership- skills'] = data['Leadership- skills'].str.strip()
uniq_values2 = data['Leadership- skills'].unique()
print(uniq_values2)

average_gpa = data.groupby('Leadership- skills')['CGPA'].mean()
average_salary = data.groupby('Leadership- skills')['Expected salary (Lac)'].mean()
print(average_gpa)
print(average_salary)
fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(12, 6))

axes[0].bar(average_gpa.index, average_gpa.values, color=['blue', 'green'])
axes[0].set_title('Average GPA by Leadership Skills')
axes[0].set_xlabel('Leadership Skills')
axes[0].set_ylabel('Average GPA')


axes[1].bar(average_salary.index, average_salary.values, color=['blue', 'green'])
axes[1].set_title('Average Expected Salary by Leadership Skills')
axes[1].set_xlabel('Leadership Skills')
axes[1].set_ylabel('Average Expected Salary')

plt.tight_layout()
plt.show()

"""**14)How many students are graduating by the end of 2024?**"""

import pandas as pd

path = "/content/Dataanalystdata.xlsx"
data = pd.read_excel(path)

graduation = (data['Year of Graduation'] <= 2024).sum()

print("Number of students graduating by the end of 2024:", graduation)

"""**15)Which promotion channel brings in more attention participation for the event ?**"""

import pandas as pd
import matplotlib.pyplot as plt

path = "/Dataanalystdata.xlsx"
data = pd.read_excel(path)

student_records = data[data['Designation'] == 'Students']
channel_counts = student_records['How did you come to know about this event?'].value_counts()
topchannelCounts = channel_counts.head(10)

plt.figure(figsize=(20,10))
patches, texts, autotexts = plt.pie(topchannelCounts, labels=topchannelCounts.index, autopct='%1.1f%%', startangle=120)

plt.legend(patches, topchannelCounts.index, title='Promotion Channels', loc="upper left")
plt.axis('equal')
plt.show()

"""**16)Find the total number of students who attended the event related to data science (from all data science related courses)?**"""

import pandas as pd

file_path = '/content/Dataanalystdata.xlsx'
data_new = pd.read_excel(file_path)

events = [
    'Data Visualization using Power BI',
    'Artificial Intelligence',
    'Hello ML and DL',
    'IS DATA SCIENCE FOR YOU?'
]

event_counts = data_new[data_new['Events'].isin(events)]['Events'].value_counts()
event_counts

plt.figure(figsize=(10, 8))
event_counts.plot(kind='bar', color='skyblue')
ax = event_counts.plot(kind='bar', width=0.8)

plt.title('Attendees by events')
plt.xlabel('Events')
plt.ylabel('attendees')

ax.set_xlabel('')
for container in ax.containers:
    ax.bar_label(container, label_type='edge', fontsize=10, color='black', padding=3)

plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""**17)Those who have high CGPA & more experience in language those who had high expectations for salary? (avg)**"""

import pandas as pd

path = '/content/Dataanalystdata.xlsx'
data = pd.read_excel(path)

filtered_data = data[
    (data['CGPA'] > data['CGPA'].mean()) &
    (data['Experience with python (Months)'] > data['Experience with python (Months)'].mean())
]

average_salary = filtered_data['Expected salary (Lac)'].mean()

print(f"Average expected salary for those with high CGPA and experience in language: {average_salary}")

"""**18)How many students know about the events from their colleges ? which of these top 5 colleges ?**"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_excel('/content/Dataanalystdata.xlsx')
filtered_df = df[df['How did you come to know about this event?'] == 'SPOC/ College Professor']
college_counts = filtered_df['College Name'].value_counts()

top5 = college_counts.head(5)
print(top5)
plt.figure(figsize=(10, 6))
top5.plot(kind='bar', color='skyblue')

plt.title('Top 5 Colleges ')
plt.xlabel('College Name')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()